(function (t, e) {
    function i(e, i) {
        var s, o, a, u = e.nodeName.toLowerCase();
        return "area" === u ? (s = e.parentNode, o = s.name, e.href && o && "map" === s.nodeName.toLowerCase() ? (a = t("img[usemap=#" + o + "]")[0], !!a && n(a)) : !1) : (/input|select|textarea|button|object/.test(u) ? !e.disabled : "a" === u ? e.href || i : i) && n(e)
    }

    function n(e) {
        return t.expr.filters.visible(e) && !t(e).parents().andSelf().filter(function () {
            return "hidden" === t.css(this, "visibility")
        }).length
    }
    var s = 0,
        o = /^ui-id-\d+$/;
    t.ui = t.ui || {}, t.ui.version || (t.extend(t.ui, {
        version: "1.9.2",
        keyCode: {
            BACKSPACE: 8,
            COMMA: 188,
            DELETE: 46,
            DOWN: 40,
            END: 35,
            ENTER: 13,
            ESCAPE: 27,
            HOME: 36,
            LEFT: 37,
            NUMPAD_ADD: 107,
            NUMPAD_DECIMAL: 110,
            NUMPAD_DIVIDE: 111,
            NUMPAD_ENTER: 108,
            NUMPAD_MULTIPLY: 106,
            NUMPAD_SUBTRACT: 109,
            PAGE_DOWN: 34,
            PAGE_UP: 33,
            PERIOD: 190,
            RIGHT: 39,
            SPACE: 32,
            TAB: 9,
            UP: 38
        }
    }), t.fn.extend({
        _focus: t.fn.focus,
        focus: function (e, i) {
            return "number" == typeof e ? this.each(function () {
                var n = this;
                setTimeout(function () {
                    t(n).focus(), i && i.call(n)
                }, e)
            }) : this._focus.apply(this, arguments)
        },
        scrollParent: function () {
            var e;
            return e = t.ui.ie && /(static|relative)/.test(this.css("position")) || /absolute/.test(this.css("position")) ? this.parents().filter(function () {
                return /(relative|absolute|fixed)/.test(t.css(this, "position")) && /(auto|scroll)/.test(t.css(this, "overflow") + t.css(this, "overflow-y") + t.css(this, "overflow-x"))
            }).eq(0) : this.parents().filter(function () {
                return /(auto|scroll)/.test(t.css(this, "overflow") + t.css(this, "overflow-y") + t.css(this, "overflow-x"))
            }).eq(0), /fixed/.test(this.css("position")) || !e.length ? t(document) : e
        },
        zIndex: function (i) {
            if (i !== e) return this.css("zIndex", i);
            if (this.length)
                for (var n, s, o = t(this[0]); o.length && o[0] !== document;) {
                    if (n = o.css("position"), ("absolute" === n || "relative" === n || "fixed" === n) && (s = parseInt(o.css("zIndex"), 10), !isNaN(s) && 0 !== s)) return s;
                    o = o.parent()
                }
            return 0
        },
        uniqueId: function () {
            return this.each(function () {
                this.id || (this.id = "ui-id-" + ++s)
            })
        },
        removeUniqueId: function () {
            return this.each(function () {
                o.test(this.id) && t(this).removeAttr("id")
            })
        }
    }), t.extend(t.expr[":"], {
        data: t.expr.createPseudo ? t.expr.createPseudo(function (e) {
            return function (i) {
                return !!t.data(i, e)
            }
        }) : function (e, i, n) {
            return !!t.data(e, n[3])
        },
        focusable: function (e) {
            return i(e, !isNaN(t.attr(e, "tabindex")))
        },
        tabbable: function (e) {
            var n = t.attr(e, "tabindex"),
                s = isNaN(n);
            return (s || n >= 0) && i(e, !s)
        }
    }), t(function () {
        var e = document.body,
            i = e.appendChild(i = document.createElement("div"));
        i.offsetHeight, t.extend(i.style, {
            minHeight: "100px",
            height: "auto",
            padding: 0,
            borderWidth: 0
        }), t.support.minHeight = 100 === i.offsetHeight, t.support.selectstart = "onselectstart" in i, e.removeChild(i).style.display = "none"
    }), t("<a>").outerWidth(1).jquery || t.each(["Width", "Height"], function (i, n) {
        function s(e, i, n, s) {
            return t.each(o, function () {
                i -= parseFloat(t.css(e, "padding" + this)) || 0, n && (i -= parseFloat(t.css(e, "border" + this + "Width")) || 0), s && (i -= parseFloat(t.css(e, "margin" + this)) || 0)
            }), i
        }
        var o = "Width" === n ? ["Left", "Right"] : ["Top", "Bottom"],
            a = n.toLowerCase(),
            u = {
                innerWidth: t.fn.innerWidth,
                innerHeight: t.fn.innerHeight,
                outerWidth: t.fn.outerWidth,
                outerHeight: t.fn.outerHeight
            };
        t.fn["inner" + n] = function (i) {
            return i === e ? u["inner" + n].call(this) : this.each(function () {
                t(this).css(a, s(this, i) + "px")
            })
        }, t.fn["outer" + n] = function (e, i) {
            return "number" != typeof e ? u["outer" + n].call(this, e) : this.each(function () {
                t(this).css(a, s(this, e, !0, i) + "px")
            })
        }
    }), t("<a>").data("a-b", "a").removeData("a-b").data("a-b") && (t.fn.removeData = function (e) {
        return function (i) {
            return arguments.length ? e.call(this, t.camelCase(i)) : e.call(this)
        }
    }(t.fn.removeData)), function () {
        var e = /msie ([\w.]+)/.exec(navigator.userAgent.toLowerCase()) || [];
        t.ui.ie = e.length ? !0 : !1, t.ui.ie6 = 6 === parseFloat(e[1], 10)
    }(), t.fn.extend({
        disableSelection: function () {
            return this.bind((t.support.selectstart ? "selectstart" : "mousedown") + ".ui-disableSelection", function (t) {
                t.preventDefault()
            })
        },
        enableSelection: function () {
            return this.unbind(".ui-disableSelection")
        }
    }), t.extend(t.ui, {
        plugin: {
            add: function (e, i, n) {
                var s, o = t.ui[e].prototype;
                for (s in n) o.plugins[s] = o.plugins[s] || [], o.plugins[s].push([i, n[s]])
            },
            call: function (t, e, i) {
                var n, s = t.plugins[e];
                if (s && t.element[0].parentNode && 11 !== t.element[0].parentNode.nodeType)
                    for (n = 0; s.length > n; n++) t.options[s[n][0]] && s[n][1].apply(t.element, i)
            }
        },
        contains: t.contains,
        hasScroll: function (e, i) {
            if ("hidden" === t(e).css("overflow")) return !1;
            var n = i && "left" === i ? "scrollLeft" : "scrollTop",
                s = !1;
            return e[n] > 0 ? !0 : (e[n] = 1, s = e[n] > 0, e[n] = 0, s)
        },
        isOverAxis: function (t, e, i) {
            return t > e && e + i > t
        },
        isOver: function (e, i, n, s, o, a) {
            return t.ui.isOverAxis(e, n, o) && t.ui.isOverAxis(i, s, a)
        }
    }))
})(jQuery);
(function (t, e) {
    var i = 0,
        a = Array.prototype.slice,
        n = t.cleanData;
    t.cleanData = function (e) {
        for (var i, a = 0; null != (i = e[a]); a++) try {
            t(i).triggerHandler("remove")
        } catch (s) {}
        n(e)
    }, t.widget = function (i, a, n) {
        var s, r, o, l, u = i.split(".")[0];
        i = i.split(".")[1], s = u + "-" + i, n || (n = a, a = t.Widget), t.expr[":"][s.toLowerCase()] = function (e) {
            return !!t.data(e, s)
        }, t[u] = t[u] || {}, r = t[u][i], o = t[u][i] = function (t, i) {
            return this._createWidget ? (arguments.length && this._createWidget(t, i), e) : new o(t, i)
        }, t.extend(o, r, {
            version: n.version,
            _proto: t.extend({}, n),
            _childConstructors: []
        }), l = new a, l.options = t.widget.extend({}, l.options), t.each(n, function (e, i) {
            t.isFunction(i) && (n[e] = function () {
                var t = function () {
                        return a.prototype[e].apply(this, arguments)
                    },
                    n = function (t) {
                        return a.prototype[e].apply(this, t)
                    };
                return function () {
                    var e, a = this._super,
                        s = this._superApply;
                    return this._super = t, this._superApply = n, e = i.apply(this, arguments), this._super = a, this._superApply = s, e
                }
            }())
        }), o.prototype = t.widget.extend(l, {
            widgetEventPrefix: r ? l.widgetEventPrefix : i
        }, n, {
            constructor: o,
            namespace: u,
            widgetName: i,
            widgetBaseClass: s,
            widgetFullName: s
        }), r ? (t.each(r._childConstructors, function (e, i) {
            var a = i.prototype;
            t.widget(a.namespace + "." + a.widgetName, o, i._proto)
        }), delete r._childConstructors) : a._childConstructors.push(o), t.widget.bridge(i, o)
    }, t.widget.extend = function (i) {
        for (var n, s, r = a.call(arguments, 1), o = 0, l = r.length; l > o; o++)
            for (n in r[o]) s = r[o][n], r[o].hasOwnProperty(n) && s !== e && (i[n] = t.isPlainObject(s) ? t.isPlainObject(i[n]) ? t.widget.extend({}, i[n], s) : t.widget.extend({}, s) : s);
        return i
    }, t.widget.bridge = function (i, n) {
        var s = n.prototype.widgetFullName || i;
        t.fn[i] = function (r) {
            var o = "string" == typeof r,
                l = a.call(arguments, 1),
                u = this;
            return r = !o && l.length ? t.widget.extend.apply(null, [r].concat(l)) : r, o ? this.each(function () {
                var a, n = t.data(this, s);
                return n ? t.isFunction(n[r]) && "_" !== r.charAt(0) ? (a = n[r].apply(n, l), a !== n && a !== e ? (u = a && a.jquery ? u.pushStack(a.get()) : a, !1) : e) : t.error("no such method '" + r + "' for " + i + " widget instance") : t.error("cannot call methods on " + i + " prior to initialization; " + "attempted to call method '" + r + "'")
            }) : this.each(function () {
                var e = t.data(this, s);
                e ? e.option(r || {})._init() : t.data(this, s, new n(r, this))
            }), u
        }
    }, t.Widget = function () {}, t.Widget._childConstructors = [], t.Widget.prototype = {
        widgetName: "widget",
        widgetEventPrefix: "",
        defaultElement: "<div>",
        options: {
            disabled: !1,
            create: null
        },
        _createWidget: function (e, a) {
            a = t(a || this.defaultElement || this)[0], this.element = t(a), this.uuid = i++, this.eventNamespace = "." + this.widgetName + this.uuid, this.options = t.widget.extend({}, this.options, this._getCreateOptions(), e), this.bindings = t(), this.hoverable = t(), this.focusable = t(), a !== this && (t.data(a, this.widgetName, this), t.data(a, this.widgetFullName, this), this._on(!0, this.element, {
                remove: function (t) {
                    t.target === a && this.destroy()
                }
            }), this.document = t(a.style ? a.ownerDocument : a.document || a), this.window = t(this.document[0].defaultView || this.document[0].parentWindow)), this._create(), this._trigger("create", null, this._getCreateEventData()), this._init()
        },
        _getCreateOptions: t.noop,
        _getCreateEventData: t.noop,
        _create: t.noop,
        _init: t.noop,
        destroy: function () {
            this._destroy(), this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(t.camelCase(this.widgetFullName)), this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName + "-disabled " + "ui-state-disabled"), this.bindings.unbind(this.eventNamespace), this.hoverable.removeClass("ui-state-hover"), this.focusable.removeClass("ui-state-focus")
        },
        _destroy: t.noop,
        widget: function () {
            return this.element
        },
        option: function (i, a) {
            var n, s, r, o = i;
            if (0 === arguments.length) return t.widget.extend({}, this.options);
            if ("string" == typeof i)
                if (o = {}, n = i.split("."), i = n.shift(), n.length) {
                    for (s = o[i] = t.widget.extend({}, this.options[i]), r = 0; n.length - 1 > r; r++) s[n[r]] = s[n[r]] || {}, s = s[n[r]];
                    if (i = n.pop(), a === e) return s[i] === e ? null : s[i];
                    s[i] = a
                } else {
                    if (a === e) return this.options[i] === e ? null : this.options[i];
                    o[i] = a
                }
            return this._setOptions(o), this
        },
        _setOptions: function (t) {
            var e;
            for (e in t) this._setOption(e, t[e]);
            return this
        },
        _setOption: function (t, e) {
            return this.options[t] = e, "disabled" === t && (this.widget().toggleClass(this.widgetFullName + "-disabled ui-state-disabled", !!e).attr("aria-disabled", e), this.hoverable.removeClass("ui-state-hover"), this.focusable.removeClass("ui-state-focus")), this
        },
        enable: function () {
            return this._setOption("disabled", !1)
        },
        disable: function () {
            return this._setOption("disabled", !0)
        },
        _on: function (i, a, n) {
            var s, r = this;
            "boolean" != typeof i && (n = a, a = i, i = !1), n ? (a = s = t(a), this.bindings = this.bindings.add(a)) : (n = a, a = this.element, s = this.widget()), t.each(n, function (n, o) {
                function l() {
                    return i || r.options.disabled !== !0 && !t(this).hasClass("ui-state-disabled") ? ("string" == typeof o ? r[o] : o).apply(r, arguments) : e
                }
                "string" != typeof o && (l.guid = o.guid = o.guid || l.guid || t.guid++);
                var u = n.match(/^(\w+)\s*(.*)$/),
                    d = u[1] + r.eventNamespace,
                    c = u[2];
                c ? s.delegate(c, d, l) : a.bind(d, l)
            })
        },
        _off: function (t, e) {
            e = (e || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace, t.unbind(e).undelegate(e)
        },
        _delay: function (t, e) {
            function i() {
                return ("string" == typeof t ? a[t] : t).apply(a, arguments)
            }
            var a = this;
            return setTimeout(i, e || 0)
        },
        _hoverable: function (e) {
            this.hoverable = this.hoverable.add(e), this._on(e, {
                mouseenter: function (e) {
                    t(e.currentTarget).addClass("ui-state-hover")
                },
                mouseleave: function (e) {
                    t(e.currentTarget).removeClass("ui-state-hover")
                }
            })
        },
        _focusable: function (e) {
            this.focusable = this.focusable.add(e), this._on(e, {
                focusin: function (e) {
                    t(e.currentTarget).addClass("ui-state-focus")
                },
                focusout: function (e) {
                    t(e.currentTarget).removeClass("ui-state-focus")
                }
            })
        },
        _trigger: function (e, i, a) {
            var n, s, r = this.options[e];
            if (a = a || {}, i = t.Event(i), i.type = (e === this.widgetEventPrefix ? e : this.widgetEventPrefix + e).toLowerCase(), i.target = this.element[0], s = i.originalEvent)
                for (n in s) n in i || (i[n] = s[n]);
            return this.element.trigger(i, a), !(t.isFunction(r) && r.apply(this.element[0], [i].concat(a)) === !1 || i.isDefaultPrevented())
        }
    }, t.each({
        show: "fadeIn",
        hide: "fadeOut"
    }, function (e, i) {
        t.Widget.prototype["_" + e] = function (a, n, s) {
            "string" == typeof n && (n = {
                effect: n
            });
            var r, o = n ? n === !0 || "number" == typeof n ? i : n.effect || i : e;
            n = n || {}, "number" == typeof n && (n = {
                duration: n
            }), r = !t.isEmptyObject(n), n.complete = s, n.delay && a.delay(n.delay), r && t.effects && (t.effects.effect[o] || t.uiBackCompat !== !1 && t.effects[o]) ? a[e](n) : o !== e && a[o] ? a[o](n.duration, n.easing, s) : a.queue(function (i) {
                t(this)[e](), s && s.call(a[0]), i()
            })
        }
    }), t.uiBackCompat !== !1 && (t.Widget.prototype._getCreateOptions = function () {
        return t.metadata && t.metadata.get(this.element[0])[this.widgetName]
    })
})(jQuery);
(function (e) {
    var t = !1;
    e(document).mouseup(function () {
        t = !1
    }), e.widget("ui.mouse", {
        version: "1.9.2",
        options: {
            cancel: "input,textarea,button,select,option",
            distance: 1,
            delay: 0
        },
        _mouseInit: function () {
            var t = this;
            this.element.bind("mousedown." + this.widgetName, function (e) {
                return t._mouseDown(e)
            }).bind("click." + this.widgetName, function (i) {
                return !0 === e.data(i.target, t.widgetName + ".preventClickEvent") ? (e.removeData(i.target, t.widgetName + ".preventClickEvent"), i.stopImmediatePropagation(), !1) : undefined
            }), this.started = !1
        },
        _mouseDestroy: function () {
            this.element.unbind("." + this.widgetName), this._mouseMoveDelegate && e(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate)
        },
        _mouseDown: function (i) {
            if (!t) {
                this._mouseStarted && this._mouseUp(i), this._mouseDownEvent = i;
                var a = this,
                    n = 1 === i.which,
                    s = "string" == typeof this.options.cancel && i.target.nodeName ? e(i.target).closest(this.options.cancel).length : !1;
                return n && !s && this._mouseCapture(i) ? (this.mouseDelayMet = !this.options.delay, this.mouseDelayMet || (this._mouseDelayTimer = setTimeout(function () {
                    a.mouseDelayMet = !0
                }, this.options.delay)), this._mouseDistanceMet(i) && this._mouseDelayMet(i) && (this._mouseStarted = this._mouseStart(i) !== !1, !this._mouseStarted) ? (i.preventDefault(), !0) : (!0 === e.data(i.target, this.widgetName + ".preventClickEvent") && e.removeData(i.target, this.widgetName + ".preventClickEvent"), this._mouseMoveDelegate = function (e) {
                    return a._mouseMove(e)
                }, this._mouseUpDelegate = function (e) {
                    return a._mouseUp(e)
                }, e(document).bind("mousemove." + this.widgetName, this._mouseMoveDelegate).bind("mouseup." + this.widgetName, this._mouseUpDelegate), i.preventDefault(), t = !0, !0)) : !0
            }
        },
        _mouseMove: function (t) {
            return !e.ui.ie || document.documentMode >= 9 || t.button ? this._mouseStarted ? (this._mouseDrag(t), t.preventDefault()) : (this._mouseDistanceMet(t) && this._mouseDelayMet(t) && (this._mouseStarted = this._mouseStart(this._mouseDownEvent, t) !== !1, this._mouseStarted ? this._mouseDrag(t) : this._mouseUp(t)), !this._mouseStarted) : this._mouseUp(t)
        },
        _mouseUp: function (t) {
            return e(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate), this._mouseStarted && (this._mouseStarted = !1, t.target === this._mouseDownEvent.target && e.data(t.target, this.widgetName + ".preventClickEvent", !0), this._mouseStop(t)), !1
        },
        _mouseDistanceMet: function (e) {
            return Math.max(Math.abs(this._mouseDownEvent.pageX - e.pageX), Math.abs(this._mouseDownEvent.pageY - e.pageY)) >= this.options.distance
        },
        _mouseDelayMet: function () {
            return this.mouseDelayMet
        },
        _mouseStart: function () {},
        _mouseDrag: function () {},
        _mouseStop: function () {},
        _mouseCapture: function () {
            return !0
        }
    })
})(jQuery);
(function (t, e) {
    function i(t, e, i) {
        return [parseInt(t[0], 10) * (h.test(t[0]) ? e / 100 : 1), parseInt(t[1], 10) * (h.test(t[1]) ? i / 100 : 1)]
    }

    function a(e, i) {
        return parseInt(t.css(e, i), 10) || 0
    }
    t.ui = t.ui || {};
    var n, s = Math.max,
        r = Math.abs,
        o = Math.round,
        u = /left|center|right/,
        l = /top|center|bottom/,
        d = /[\+\-]\d+%?/,
        c = /^\w+/,
        h = /%$/,
        p = t.fn.position;
    t.position = {
            scrollbarWidth: function () {
                if (n !== e) return n;
                var i, a, s = t("<div style='display:block;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),
                    r = s.children()[0];
                return t("body").append(s), i = r.offsetWidth, s.css("overflow", "scroll"), a = r.offsetWidth, i === a && (a = s[0].clientWidth), s.remove(), n = i - a
            },
            getScrollInfo: function (e) {
                var i = e.isWindow ? "" : e.element.css("overflow-x"),
                    a = e.isWindow ? "" : e.element.css("overflow-y"),
                    n = "scroll" === i || "auto" === i && e.width < e.element[0].scrollWidth,
                    s = "scroll" === a || "auto" === a && e.height < e.element[0].scrollHeight;
                return {
                    width: n ? t.position.scrollbarWidth() : 0,
                    height: s ? t.position.scrollbarWidth() : 0
                }
            },
            getWithinInfo: function (e) {
                var i = t(e || window),
                    a = t.isWindow(i[0]);
                return {
                    element: i,
                    isWindow: a,
                    offset: i.offset() || {
                        left: 0,
                        top: 0
                    },
                    scrollLeft: i.scrollLeft(),
                    scrollTop: i.scrollTop(),
                    width: a ? i.width() : i.outerWidth(),
                    height: a ? i.height() : i.outerHeight()
                }
            }
        }, t.fn.position = function (e) {
            if (!e || !e.of) return p.apply(this, arguments);
            e = t.extend({}, e);
            var n, h, f, g, m, _ = t(e.of),
                v = t.position.getWithinInfo(e.within),
                D = t.position.getScrollInfo(v),
                y = _[0],
                k = (e.collision || "flip").split(" "),
                b = {};
            return 9 === y.nodeType ? (h = _.width(), f = _.height(), g = {
                top: 0,
                left: 0
            }) : t.isWindow(y) ? (h = _.width(), f = _.height(), g = {
                top: _.scrollTop(),
                left: _.scrollLeft()
            }) : y.preventDefault ? (e.at = "left top", h = f = 0, g = {
                top: y.pageY,
                left: y.pageX
            }) : (h = _.outerWidth(), f = _.outerHeight(), g = _.offset()), m = t.extend({}, g), t.each(["my", "at"], function () {
                var t, i, a = (e[this] || "").split(" ");
                1 === a.length && (a = u.test(a[0]) ? a.concat(["center"]) : l.test(a[0]) ? ["center"].concat(a) : ["center", "center"]), a[0] = u.test(a[0]) ? a[0] : "center", a[1] = l.test(a[1]) ? a[1] : "center", t = d.exec(a[0]), i = d.exec(a[1]), b[this] = [t ? t[0] : 0, i ? i[0] : 0], e[this] = [c.exec(a[0])[0], c.exec(a[1])[0]]
            }), 1 === k.length && (k[1] = k[0]), "right" === e.at[0] ? m.left += h : "center" === e.at[0] && (m.left += h / 2), "bottom" === e.at[1] ? m.top += f : "center" === e.at[1] && (m.top += f / 2), n = i(b.at, h, f), m.left += n[0], m.top += n[1], this.each(function () {
                var u, l, d = t(this),
                    c = d.outerWidth(),
                    p = d.outerHeight(),
                    y = a(this, "marginLeft"),
                    w = a(this, "marginTop"),
                    M = c + y + a(this, "marginRight") + D.width,
                    $ = p + w + a(this, "marginBottom") + D.height,
                    C = t.extend({}, m),
                    x = i(b.my, d.outerWidth(), d.outerHeight());
                "right" === e.my[0] ? C.left -= c : "center" === e.my[0] && (C.left -= c / 2), "bottom" === e.my[1] ? C.top -= p : "center" === e.my[1] && (C.top -= p / 2), C.left += x[0], C.top += x[1], t.support.offsetFractions || (C.left = o(C.left), C.top = o(C.top)), u = {
                    marginLeft: y,
                    marginTop: w
                }, t.each(["left", "top"], function (i, a) {
                    t.ui.position[k[i]] && t.ui.position[k[i]][a](C, {
                        targetWidth: h,
                        targetHeight: f,
                        elemWidth: c,
                        elemHeight: p,
                        collisionPosition: u,
                        collisionWidth: M,
                        collisionHeight: $,
                        offset: [n[0] + x[0], n[1] + x[1]],
                        my: e.my,
                        at: e.at,
                        within: v,
                        elem: d
                    })
                }), t.fn.bgiframe && d.bgiframe(), e.using && (l = function (t) {
                    var i = g.left - C.left,
                        a = i + h - c,
                        n = g.top - C.top,
                        o = n + f - p,
                        u = {
                            target: {
                                element: _,
                                left: g.left,
                                top: g.top,
                                width: h,
                                height: f
                            },
                            element: {
                                element: d,
                                left: C.left,
                                top: C.top,
                                width: c,
                                height: p
                            },
                            horizontal: 0 > a ? "left" : i > 0 ? "right" : "center",
                            vertical: 0 > o ? "top" : n > 0 ? "bottom" : "middle"
                        };
                    c > h && h > r(i + a) && (u.horizontal = "center"), p > f && f > r(n + o) && (u.vertical = "middle"), u.important = s(r(i), r(a)) > s(r(n), r(o)) ? "horizontal" : "vertical", e.using.call(this, t, u)
                }), d.offset(t.extend(C, {
                    using: l
                }))
            })
        }, t.ui.position = {
            fit: {
                left: function (t, e) {
                    var i, a = e.within,
                        n = a.isWindow ? a.scrollLeft : a.offset.left,
                        r = a.width,
                        o = t.left - e.collisionPosition.marginLeft,
                        u = n - o,
                        l = o + e.collisionWidth - r - n;
                    e.collisionWidth > r ? u > 0 && 0 >= l ? (i = t.left + u + e.collisionWidth - r - n, t.left += u - i) : t.left = l > 0 && 0 >= u ? n : u > l ? n + r - e.collisionWidth : n : u > 0 ? t.left += u : l > 0 ? t.left -= l : t.left = s(t.left - o, t.left)
                },
                top: function (t, e) {
                    var i, a = e.within,
                        n = a.isWindow ? a.scrollTop : a.offset.top,
                        r = e.within.height,
                        o = t.top - e.collisionPosition.marginTop,
                        u = n - o,
                        l = o + e.collisionHeight - r - n;
                    e.collisionHeight > r ? u > 0 && 0 >= l ? (i = t.top + u + e.collisionHeight - r - n, t.top += u - i) : t.top = l > 0 && 0 >= u ? n : u > l ? n + r - e.collisionHeight : n : u > 0 ? t.top += u : l > 0 ? t.top -= l : t.top = s(t.top - o, t.top)
                }
            },
            flip: {
                left: function (t, e) {
                    var i, a, n = e.within,
                        s = n.offset.left + n.scrollLeft,
                        o = n.width,
                        u = n.isWindow ? n.scrollLeft : n.offset.left,
                        l = t.left - e.collisionPosition.marginLeft,
                        d = l - u,
                        c = l + e.collisionWidth - o - u,
                        h = "left" === e.my[0] ? -e.elemWidth : "right" === e.my[0] ? e.elemWidth : 0,
                        p = "left" === e.at[0] ? e.targetWidth : "right" === e.at[0] ? -e.targetWidth : 0,
                        f = -2 * e.offset[0];
                    0 > d ? (i = t.left + h + p + f + e.collisionWidth - o - s, (0 > i || r(d) > i) && (t.left += h + p + f)) : c > 0 && (a = t.left - e.collisionPosition.marginLeft + h + p + f - u, (a > 0 || c > r(a)) && (t.left += h + p + f))
                },
                top: function (t, e) {
                    var i, a, n = e.within,
                        s = n.offset.top + n.scrollTop,
                        o = n.height,
                        u = n.isWindow ? n.scrollTop : n.offset.top,
                        l = t.top - e.collisionPosition.marginTop,
                        d = l - u,
                        c = l + e.collisionHeight - o - u,
                        h = "top" === e.my[1],
                        p = h ? -e.elemHeight : "bottom" === e.my[1] ? e.elemHeight : 0,
                        f = "top" === e.at[1] ? e.targetHeight : "bottom" === e.at[1] ? -e.targetHeight : 0,
                        g = -2 * e.offset[1];
                    0 > d ? (a = t.top + p + f + g + e.collisionHeight - o - s, t.top + p + f + g > d && (0 > a || r(d) > a) && (t.top += p + f + g)) : c > 0 && (i = t.top - e.collisionPosition.marginTop + p + f + g - u, t.top + p + f + g > c && (i > 0 || c > r(i)) && (t.top += p + f + g))
                }
            },
            flipfit: {
                left: function () {
                    t.ui.position.flip.left.apply(this, arguments), t.ui.position.fit.left.apply(this, arguments)
                },
                top: function () {
                    t.ui.position.flip.top.apply(this, arguments), t.ui.position.fit.top.apply(this, arguments)
                }
            }
        },
        function () {
            var e, i, a, n, s, r = document.getElementsByTagName("body")[0],
                o = document.createElement("div");
            e = document.createElement(r ? "div" : "body"), a = {
                visibility: "hidden",
                width: 0,
                height: 0,
                border: 0,
                margin: 0,
                background: "none"
            }, r && t.extend(a, {
                position: "absolute",
                left: "-1000px",
                top: "-1000px"
            });
            for (s in a) e.style[s] = a[s];
            e.appendChild(o), i = r || document.documentElement, i.insertBefore(e, i.firstChild), o.style.cssText = "position: absolute; left: 10.7432222px;", n = t(o).offset().left, t.support.offsetFractions = n > 10 && 11 > n, e.innerHTML = "", i.removeChild(e)
        }(), t.uiBackCompat !== !1 && function (t) {
            var i = t.fn.position;
            t.fn.position = function (a) {
                if (!a || !a.offset) return i.call(this, a);
                var n = a.offset.split(" "),
                    s = a.at.split(" ");
                return 1 === n.length && (n[1] = n[0]), /^\d/.test(n[0]) && (n[0] = "+" + n[0]), /^\d/.test(n[1]) && (n[1] = "+" + n[1]), 1 === s.length && (/left|center|right/.test(s[0]) ? s[1] = "center" : (s[1] = s[0], s[0] = "center")), i.call(this, t.extend(a, {
                    at: s[0] + n[0] + " " + s[1] + n[1],
                    offset: e
                }))
            }
        }(jQuery)
})(jQuery);
(function (e) {
    e.widget("ui.draggable", e.ui.mouse, {
        version: "1.9.2",
        widgetEventPrefix: "drag",
        options: {
            addClasses: !0,
            appendTo: "parent",
            axis: !1,
            connectToSortable: !1,
            containment: !1,
            cursor: "auto",
            cursorAt: !1,
            grid: !1,
            handle: !1,
            helper: "original",
            iframeFix: !1,
            opacity: !1,
            refreshPositions: !1,
            revert: !1,
            revertDuration: 500,
            scope: "default",
            scroll: !0,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            snap: !1,
            snapMode: "both",
            snapTolerance: 20,
            stack: !1,
            zIndex: !1
        },
        _create: function () {
            "original" != this.options.helper || /^(?:r|a|f)/.test(this.element.css("position")) || (this.element[0].style.position = "relative"), this.options.addClasses && this.element.addClass("ui-draggable"), this.options.disabled && this.element.addClass("ui-draggable-disabled"), this._mouseInit()
        },
        _destroy: function () {
            this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"), this._mouseDestroy()
        },
        _mouseCapture: function (t) {
            var i = this.options;
            return this.helper || i.disabled || e(t.target).is(".ui-resizable-handle") ? !1 : (this.handle = this._getHandle(t), this.handle ? (e(i.iframeFix === !0 ? "iframe" : i.iframeFix).each(function () {
                e('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>').css({
                    width: this.offsetWidth + "px",
                    height: this.offsetHeight + "px",
                    position: "absolute",
                    opacity: "0.001",
                    zIndex: 1e3
                }).css(e(this).offset()).appendTo("body")
            }), !0) : !1)
        },
        _mouseStart: function (t) {
            var i = this.options;
            return this.helper = this._createHelper(t), this.helper.addClass("ui-draggable-dragging"), this._cacheHelperProportions(), e.ui.ddmanager && (e.ui.ddmanager.current = this), this._cacheMargins(), this.cssPosition = this.helper.css("position"), this.scrollParent = this.helper.scrollParent(), this.offset = this.positionAbs = this.element.offset(), this.offset = {
                top: this.offset.top - this.margins.top,
                left: this.offset.left - this.margins.left
            }, e.extend(this.offset, {
                click: {
                    left: t.pageX - this.offset.left,
                    top: t.pageY - this.offset.top
                },
                parent: this._getParentOffset(),
                relative: this._getRelativeOffset()
            }), this.originalPosition = this.position = this._generatePosition(t), this.originalPageX = t.pageX, this.originalPageY = t.pageY, i.cursorAt && this._adjustOffsetFromHelper(i.cursorAt), i.containment && this._setContainment(), this._trigger("start", t) === !1 ? (this._clear(), !1) : (this._cacheHelperProportions(), e.ui.ddmanager && !i.dropBehaviour && e.ui.ddmanager.prepareOffsets(this, t), this._mouseDrag(t, !0), e.ui.ddmanager && e.ui.ddmanager.dragStart(this, t), !0)
        },
        _mouseDrag: function (t, i) {
            if (this.position = this._generatePosition(t), this.positionAbs = this._convertPositionTo("absolute"), !i) {
                var s = this._uiHash();
                if (this._trigger("drag", t, s) === !1) return this._mouseUp({}), !1;
                this.position = s.position
            }
            return this.options.axis && "y" == this.options.axis || (this.helper[0].style.left = this.position.left + "px"), this.options.axis && "x" == this.options.axis || (this.helper[0].style.top = this.position.top + "px"), e.ui.ddmanager && e.ui.ddmanager.drag(this, t), !1
        },
        _mouseStop: function (t) {
            var i = !1;
            e.ui.ddmanager && !this.options.dropBehaviour && (i = e.ui.ddmanager.drop(this, t)), this.dropped && (i = this.dropped, this.dropped = !1);
            for (var s = this.element[0], a = !1; s && (s = s.parentNode);) s == document && (a = !0);
            if (!a && "original" === this.options.helper) return !1;
            if ("invalid" == this.options.revert && !i || "valid" == this.options.revert && i || this.options.revert === !0 || e.isFunction(this.options.revert) && this.options.revert.call(this.element, i)) {
                var n = this;
                e(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function () {
                    n._trigger("stop", t) !== !1 && n._clear()
                })
            } else this._trigger("stop", t) !== !1 && this._clear();
            return !1
        },
        _mouseUp: function (t) {
            return e("div.ui-draggable-iframeFix").each(function () {
                this.parentNode.removeChild(this)
            }), e.ui.ddmanager && e.ui.ddmanager.dragStop(this, t), e.ui.mouse.prototype._mouseUp.call(this, t)
        },
        cancel: function () {
            return this.helper.is(".ui-draggable-dragging") ? this._mouseUp({}) : this._clear(), this
        },
        _getHandle: function (t) {
            var i = this.options.handle && e(this.options.handle, this.element).length ? !1 : !0;
            return e(this.options.handle, this.element).find("*").andSelf().each(function () {
                this == t.target && (i = !0)
            }), i
        },
        _createHelper: function (t) {
            var i = this.options,
                s = e.isFunction(i.helper) ? e(i.helper.apply(this.element[0], [t])) : "clone" == i.helper ? this.element.clone().removeAttr("id") : this.element;
            return s.parents("body").length || s.appendTo("parent" == i.appendTo ? this.element[0].parentNode : i.appendTo), s[0] == this.element[0] || /(fixed|absolute)/.test(s.css("position")) || s.css("position", "absolute"), s
        },
        _adjustOffsetFromHelper: function (t) {
            "string" == typeof t && (t = t.split(" ")), e.isArray(t) && (t = {
                left: +t[0],
                top: +t[1] || 0
            }), "left" in t && (this.offset.click.left = t.left + this.margins.left), "right" in t && (this.offset.click.left = this.helperProportions.width - t.right + this.margins.left), "top" in t && (this.offset.click.top = t.top + this.margins.top), "bottom" in t && (this.offset.click.top = this.helperProportions.height - t.bottom + this.margins.top)
        },
        _getParentOffset: function () {
            this.offsetParent = this.helper.offsetParent();
            var t = this.offsetParent.offset();
            return "absolute" == this.cssPosition && this.scrollParent[0] != document && e.contains(this.scrollParent[0], this.offsetParent[0]) && (t.left += this.scrollParent.scrollLeft(), t.top += this.scrollParent.scrollTop()), (this.offsetParent[0] == document.body || this.offsetParent[0].tagName && "html" == this.offsetParent[0].tagName.toLowerCase() && e.ui.ie) && (t = {
                top: 0,
                left: 0
            }), {
                top: t.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left: t.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
            }
        },
        _getRelativeOffset: function () {
            if ("relative" == this.cssPosition) {
                var e = this.element.position();
                return {
                    top: e.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
                    left: e.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
                }
            }
            return {
                top: 0,
                left: 0
            }
        },
        _cacheMargins: function () {
            this.margins = {
                left: parseInt(this.element.css("marginLeft"), 10) || 0,
                top: parseInt(this.element.css("marginTop"), 10) || 0,
                right: parseInt(this.element.css("marginRight"), 10) || 0,
                bottom: parseInt(this.element.css("marginBottom"), 10) || 0
            }
        },
        _cacheHelperProportions: function () {
            this.helperProportions = {
                width: this.helper.outerWidth(),
                height: this.helper.outerHeight()
            }
        },
        _setContainment: function () {
            var t = this.options;
            if ("parent" == t.containment && (t.containment = this.helper[0].parentNode), ("document" == t.containment || "window" == t.containment) && (this.containment = ["document" == t.containment ? 0 : e(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left, "document" == t.containment ? 0 : e(window).scrollTop() - this.offset.relative.top - this.offset.parent.top, ("document" == t.containment ? 0 : e(window).scrollLeft()) + e("document" == t.containment ? document : window).width() - this.helperProportions.width - this.margins.left, ("document" == t.containment ? 0 : e(window).scrollTop()) + (e("document" == t.containment ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]), /^(document|window|parent)$/.test(t.containment) || t.containment.constructor == Array) t.containment.constructor == Array && (this.containment = t.containment);
            else {
                var i = e(t.containment),
                    s = i[0];
                if (!s) return;
                i.offset();
                var a = "hidden" != e(s).css("overflow");
                this.containment = [(parseInt(e(s).css("borderLeftWidth"), 10) || 0) + (parseInt(e(s).css("paddingLeft"), 10) || 0), (parseInt(e(s).css("borderTopWidth"), 10) || 0) + (parseInt(e(s).css("paddingTop"), 10) || 0), (a ? Math.max(s.scrollWidth, s.offsetWidth) : s.offsetWidth) - (parseInt(e(s).css("borderLeftWidth"), 10) || 0) - (parseInt(e(s).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right, (a ? Math.max(s.scrollHeight, s.offsetHeight) : s.offsetHeight) - (parseInt(e(s).css("borderTopWidth"), 10) || 0) - (parseInt(e(s).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom], this.relative_container = i
            }
        },
        _convertPositionTo: function (t, i) {
            i || (i = this.position);
            var s = "absolute" == t ? 1 : -1,
                a = (this.options, "absolute" != this.cssPosition || this.scrollParent[0] != document && e.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent),
                n = /(html|body)/i.test(a[0].tagName);
            return {
                top: i.top + this.offset.relative.top * s + this.offset.parent.top * s - ("fixed" == this.cssPosition ? -this.scrollParent.scrollTop() : n ? 0 : a.scrollTop()) * s,
                left: i.left + this.offset.relative.left * s + this.offset.parent.left * s - ("fixed" == this.cssPosition ? -this.scrollParent.scrollLeft() : n ? 0 : a.scrollLeft()) * s
            }
        },
        _generatePosition: function (t) {
            var i = this.options,
                s = "absolute" != this.cssPosition || this.scrollParent[0] != document && e.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent,
                a = /(html|body)/i.test(s[0].tagName),
                n = t.pageX,
                r = t.pageY;
            if (this.originalPosition) {
                var o;
                if (this.containment) {
                    if (this.relative_container) {
                        var h = this.relative_container.offset();
                        o = [this.containment[0] + h.left, this.containment[1] + h.top, this.containment[2] + h.left, this.containment[3] + h.top]
                    } else o = this.containment;
                    t.pageX - this.offset.click.left < o[0] && (n = o[0] + this.offset.click.left), t.pageY - this.offset.click.top < o[1] && (r = o[1] + this.offset.click.top), t.pageX - this.offset.click.left > o[2] && (n = o[2] + this.offset.click.left), t.pageY - this.offset.click.top > o[3] && (r = o[3] + this.offset.click.top)
                }
                if (i.grid) {
                    var l = i.grid[1] ? this.originalPageY + Math.round((r - this.originalPageY) / i.grid[1]) * i.grid[1] : this.originalPageY;
                    r = o ? l - this.offset.click.top < o[1] || l - this.offset.click.top > o[3] ? l - this.offset.click.top < o[1] ? l + i.grid[1] : l - i.grid[1] : l : l;
                    var u = i.grid[0] ? this.originalPageX + Math.round((n - this.originalPageX) / i.grid[0]) * i.grid[0] : this.originalPageX;
                    n = o ? u - this.offset.click.left < o[0] || u - this.offset.click.left > o[2] ? u - this.offset.click.left < o[0] ? u + i.grid[0] : u - i.grid[0] : u : u
                }
            }
            return {
                top: r - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ("fixed" == this.cssPosition ? -this.scrollParent.scrollTop() : a ? 0 : s.scrollTop()),
                left: n - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ("fixed" == this.cssPosition ? -this.scrollParent.scrollLeft() : a ? 0 : s.scrollLeft())
            }
        },
        _clear: function () {
            this.helper.removeClass("ui-draggable-dragging"), this.helper[0] == this.element[0] || this.cancelHelperRemoval || this.helper.remove(), this.helper = null, this.cancelHelperRemoval = !1
        },
        _trigger: function (t, i, s) {
            return s = s || this._uiHash(), e.ui.plugin.call(this, t, [i, s]), "drag" == t && (this.positionAbs = this._convertPositionTo("absolute")), e.Widget.prototype._trigger.call(this, t, i, s)
        },
        plugins: {},
        _uiHash: function () {
            return {
                helper: this.helper,
                position: this.position,
                originalPosition: this.originalPosition,
                offset: this.positionAbs
            }
        }
    }), e.ui.plugin.add("draggable", "connectToSortable", {
        start: function (t, i) {
            var s = e(this).data("draggable"),
                a = s.options,
                n = e.extend({}, i, {
                    item: s.element
                });
            s.sortables = [], e(a.connectToSortable).each(function () {
                var i = e.data(this, "sortable");
                i && !i.options.disabled && (s.sortables.push({
                    instance: i,
                    shouldRevert: i.options.revert
                }), i.refreshPositions(), i._trigger("activate", t, n))
            })
        },
        stop: function (t, i) {
            var s = e(this).data("draggable"),
                a = e.extend({}, i, {
                    item: s.element
                });
            e.each(s.sortables, function () {
                this.instance.isOver ? (this.instance.isOver = 0, s.cancelHelperRemoval = !0, this.instance.cancelHelperRemoval = !1, this.shouldRevert && (this.instance.options.revert = !0), this.instance._mouseStop(t), this.instance.options.helper = this.instance.options._helper, "original" == s.options.helper && this.instance.currentItem.css({
                    top: "auto",
                    left: "auto"
                })) : (this.instance.cancelHelperRemoval = !1, this.instance._trigger("deactivate", t, a))
            })
        },
        drag: function (t, i) {
            var s = e(this).data("draggable"),
                a = this;
            e.each(s.sortables, function () {
                var n = !1,
                    r = this;
                this.instance.positionAbs = s.positionAbs, this.instance.helperProportions = s.helperProportions, this.instance.offset.click = s.offset.click, this.instance._intersectsWith(this.instance.containerCache) && (n = !0, e.each(s.sortables, function () {
                    return this.instance.positionAbs = s.positionAbs, this.instance.helperProportions = s.helperProportions, this.instance.offset.click = s.offset.click, this != r && this.instance._intersectsWith(this.instance.containerCache) && e.ui.contains(r.instance.element[0], this.instance.element[0]) && (n = !1), n
                })), n ? (this.instance.isOver || (this.instance.isOver = 1, this.instance.currentItem = e(a).clone().removeAttr("id").appendTo(this.instance.element).data("sortable-item", !0), this.instance.options._helper = this.instance.options.helper, this.instance.options.helper = function () {
                    return i.helper[0]
                }, t.target = this.instance.currentItem[0], this.instance._mouseCapture(t, !0), this.instance._mouseStart(t, !0, !0), this.instance.offset.click.top = s.offset.click.top, this.instance.offset.click.left = s.offset.click.left, this.instance.offset.parent.left -= s.offset.parent.left - this.instance.offset.parent.left, this.instance.offset.parent.top -= s.offset.parent.top - this.instance.offset.parent.top, s._trigger("toSortable", t), s.dropped = this.instance.element, s.currentItem = s.element, this.instance.fromOutside = s), this.instance.currentItem && this.instance._mouseDrag(t)) : this.instance.isOver && (this.instance.isOver = 0, this.instance.cancelHelperRemoval = !0, this.instance.options.revert = !1, this.instance._trigger("out", t, this.instance._uiHash(this.instance)), this.instance._mouseStop(t, !0), this.instance.options.helper = this.instance.options._helper, this.instance.currentItem.remove(), this.instance.placeholder && this.instance.placeholder.remove(), s._trigger("fromSortable", t), s.dropped = !1)
            })
        }
    }), e.ui.plugin.add("draggable", "cursor", {
        start: function () {
            var t = e("body"),
                i = e(this).data("draggable").options;
            t.css("cursor") && (i._cursor = t.css("cursor")), t.css("cursor", i.cursor)
        },
        stop: function () {
            var t = e(this).data("draggable").options;
            t._cursor && e("body").css("cursor", t._cursor)
        }
    }), e.ui.plugin.add("draggable", "opacity", {
        start: function (t, i) {
            var s = e(i.helper),
                a = e(this).data("draggable").options;
            s.css("opacity") && (a._opacity = s.css("opacity")), s.css("opacity", a.opacity)
        },
        stop: function (t, i) {
            var s = e(this).data("draggable").options;
            s._opacity && e(i.helper).css("opacity", s._opacity)
        }
    }), e.ui.plugin.add("draggable", "scroll", {
        start: function () {
            var t = e(this).data("draggable");
            t.scrollParent[0] != document && "HTML" != t.scrollParent[0].tagName && (t.overflowOffset = t.scrollParent.offset())
        },
        drag: function (t) {
            var i = e(this).data("draggable"),
                s = i.options,
                a = !1;
            i.scrollParent[0] != document && "HTML" != i.scrollParent[0].tagName ? (s.axis && "x" == s.axis || (i.overflowOffset.top + i.scrollParent[0].offsetHeight - t.pageY < s.scrollSensitivity ? i.scrollParent[0].scrollTop = a = i.scrollParent[0].scrollTop + s.scrollSpeed : t.pageY - i.overflowOffset.top < s.scrollSensitivity && (i.scrollParent[0].scrollTop = a = i.scrollParent[0].scrollTop - s.scrollSpeed)), s.axis && "y" == s.axis || (i.overflowOffset.left + i.scrollParent[0].offsetWidth - t.pageX < s.scrollSensitivity ? i.scrollParent[0].scrollLeft = a = i.scrollParent[0].scrollLeft + s.scrollSpeed : t.pageX - i.overflowOffset.left < s.scrollSensitivity && (i.scrollParent[0].scrollLeft = a = i.scrollParent[0].scrollLeft - s.scrollSpeed))) : (s.axis && "x" == s.axis || (t.pageY - e(document).scrollTop() < s.scrollSensitivity ? a = e(document).scrollTop(e(document).scrollTop() - s.scrollSpeed) : e(window).height() - (t.pageY - e(document).scrollTop()) < s.scrollSensitivity && (a = e(document).scrollTop(e(document).scrollTop() + s.scrollSpeed))), s.axis && "y" == s.axis || (t.pageX - e(document).scrollLeft() < s.scrollSensitivity ? a = e(document).scrollLeft(e(document).scrollLeft() - s.scrollSpeed) : e(window).width() - (t.pageX - e(document).scrollLeft()) < s.scrollSensitivity && (a = e(document).scrollLeft(e(document).scrollLeft() + s.scrollSpeed)))), a !== !1 && e.ui.ddmanager && !s.dropBehaviour && e.ui.ddmanager.prepareOffsets(i, t)
        }
    }), e.ui.plugin.add("draggable", "snap", {
        start: function () {
            var t = e(this).data("draggable"),
                i = t.options;
            t.snapElements = [], e(i.snap.constructor != String ? i.snap.items || ":data(draggable)" : i.snap).each(function () {
                var i = e(this),
                    s = i.offset();
                this != t.element[0] && t.snapElements.push({
                    item: this,
                    width: i.outerWidth(),
                    height: i.outerHeight(),
                    top: s.top,
                    left: s.left
                })
            })
        },
        drag: function (t, i) {
            for (var s = e(this).data("draggable"), a = s.options, n = a.snapTolerance, r = i.offset.left, o = r + s.helperProportions.width, h = i.offset.top, l = h + s.helperProportions.height, u = s.snapElements.length - 1; u >= 0; u--) {
                var d = s.snapElements[u].left,
                    c = d + s.snapElements[u].width,
                    p = s.snapElements[u].top,
                    m = p + s.snapElements[u].height;
                if (r > d - n && c + n > r && h > p - n && m + n > h || r > d - n && c + n > r && l > p - n && m + n > l || o > d - n && c + n > o && h > p - n && m + n > h || o > d - n && c + n > o && l > p - n && m + n > l) {
                    if ("inner" != a.snapMode) {
                        var f = n >= Math.abs(p - l),
                            g = n >= Math.abs(m - h),
                            v = n >= Math.abs(d - o),
                            y = n >= Math.abs(c - r);
                        f && (i.position.top = s._convertPositionTo("relative", {
                            top: p - s.helperProportions.height,
                            left: 0
                        }).top - s.margins.top), g && (i.position.top = s._convertPositionTo("relative", {
                            top: m,
                            left: 0
                        }).top - s.margins.top), v && (i.position.left = s._convertPositionTo("relative", {
                            top: 0,
                            left: d - s.helperProportions.width
                        }).left - s.margins.left), y && (i.position.left = s._convertPositionTo("relative", {
                            top: 0,
                            left: c
                        }).left - s.margins.left)
                    }
                    var b = f || g || v || y;
                    if ("outer" != a.snapMode) {
                        var f = n >= Math.abs(p - h),
                            g = n >= Math.abs(m - l),
                            v = n >= Math.abs(d - r),
                            y = n >= Math.abs(c - o);
                        f && (i.position.top = s._convertPositionTo("relative", {
                            top: p,
                            left: 0
                        }).top - s.margins.top), g && (i.position.top = s._convertPositionTo("relative", {
                            top: m - s.helperProportions.height,
                            left: 0
                        }).top - s.margins.top), v && (i.position.left = s._convertPositionTo("relative", {
                            top: 0,
                            left: d
                        }).left - s.margins.left), y && (i.position.left = s._convertPositionTo("relative", {
                            top: 0,
                            left: c - s.helperProportions.width
                        }).left - s.margins.left)
                    }!s.snapElements[u].snapping && (f || g || v || y || b) && s.options.snap.snap && s.options.snap.snap.call(s.element, t, e.extend(s._uiHash(), {
                        snapItem: s.snapElements[u].item
                    })), s.snapElements[u].snapping = f || g || v || y || b
                } else s.snapElements[u].snapping && s.options.snap.release && s.options.snap.release.call(s.element, t, e.extend(s._uiHash(), {
                    snapItem: s.snapElements[u].item
                })), s.snapElements[u].snapping = !1
            }
        }
    }), e.ui.plugin.add("draggable", "stack", {
        start: function () {
            var t = e(this).data("draggable").options,
                i = e.makeArray(e(t.stack)).sort(function (t, i) {
                    return (parseInt(e(t).css("zIndex"), 10) || 0) - (parseInt(e(i).css("zIndex"), 10) || 0)
                });
            if (i.length) {
                var s = parseInt(i[0].style.zIndex) || 0;
                e(i).each(function (e) {
                    this.style.zIndex = s + e
                }), this[0].style.zIndex = s + i.length
            }
        }
    }), e.ui.plugin.add("draggable", "zIndex", {
        start: function (t, i) {
            var s = e(i.helper),
                a = e(this).data("draggable").options;
            s.css("zIndex") && (a._zIndex = s.css("zIndex")), s.css("zIndex", a.zIndex)
        },
        stop: function (t, i) {
            var s = e(this).data("draggable").options;
            s._zIndex && e(i.helper).css("zIndex", s._zIndex)
        }
    })
})(jQuery);
(function (e) {
    e.widget("ui.droppable", {
        version: "1.9.2",
        widgetEventPrefix: "drop",
        options: {
            accept: "*",
            activeClass: !1,
            addClasses: !0,
            greedy: !1,
            hoverClass: !1,
            scope: "default",
            tolerance: "intersect"
        },
        _create: function () {
            var t = this.options,
                i = t.accept;
            this.isover = 0, this.isout = 1, this.accept = e.isFunction(i) ? i : function (e) {
                return e.is(i)
            }, this.proportions = {
                width: this.element[0].offsetWidth,
                height: this.element[0].offsetHeight
            }, e.ui.ddmanager.droppables[t.scope] = e.ui.ddmanager.droppables[t.scope] || [], e.ui.ddmanager.droppables[t.scope].push(this), t.addClasses && this.element.addClass("ui-droppable")
        },
        _destroy: function () {
            for (var t = e.ui.ddmanager.droppables[this.options.scope], i = 0; t.length > i; i++) t[i] == this && t.splice(i, 1);
            this.element.removeClass("ui-droppable ui-droppable-disabled")
        },
        _setOption: function (t, i) {
            "accept" == t && (this.accept = e.isFunction(i) ? i : function (e) {
                return e.is(i)
            }), e.Widget.prototype._setOption.apply(this, arguments)
        },
        _activate: function (t) {
            var i = e.ui.ddmanager.current;
            this.options.activeClass && this.element.addClass(this.options.activeClass), i && this._trigger("activate", t, this.ui(i))
        },
        _deactivate: function (t) {
            var i = e.ui.ddmanager.current;
            this.options.activeClass && this.element.removeClass(this.options.activeClass), i && this._trigger("deactivate", t, this.ui(i))
        },
        _over: function (t) {
            var i = e.ui.ddmanager.current;
            i && (i.currentItem || i.element)[0] != this.element[0] && this.accept.call(this.element[0], i.currentItem || i.element) && (this.options.hoverClass && this.element.addClass(this.options.hoverClass), this._trigger("over", t, this.ui(i)))
        },
        _out: function (t) {
            var i = e.ui.ddmanager.current;
            i && (i.currentItem || i.element)[0] != this.element[0] && this.accept.call(this.element[0], i.currentItem || i.element) && (this.options.hoverClass && this.element.removeClass(this.options.hoverClass), this._trigger("out", t, this.ui(i)))
        },
        _drop: function (t, i) {
            var s = i || e.ui.ddmanager.current;
            if (!s || (s.currentItem || s.element)[0] == this.element[0]) return !1;
            var a = !1;
            return this.element.find(":data(droppable)").not(".ui-draggable-dragging").each(function () {
                var t = e.data(this, "droppable");
                return t.options.greedy && !t.options.disabled && t.options.scope == s.options.scope && t.accept.call(t.element[0], s.currentItem || s.element) && e.ui.intersect(s, e.extend(t, {
                    offset: t.element.offset()
                }), t.options.tolerance) ? (a = !0, !1) : undefined
            }), a ? !1 : this.accept.call(this.element[0], s.currentItem || s.element) ? (this.options.activeClass && this.element.removeClass(this.options.activeClass), this.options.hoverClass && this.element.removeClass(this.options.hoverClass), this._trigger("drop", t, this.ui(s)), this.element) : !1
        },
        ui: function (e) {
            return {
                draggable: e.currentItem || e.element,
                helper: e.helper,
                position: e.position,
                offset: e.positionAbs
            }
        }
    }), e.ui.intersect = function (t, i, s) {
        if (!i.offset) return !1;
        var a = (t.positionAbs || t.position.absolute).left,
            n = a + t.helperProportions.width,
            r = (t.positionAbs || t.position.absolute).top,
            o = r + t.helperProportions.height,
            h = i.offset.left,
            l = h + i.proportions.width,
            u = i.offset.top,
            d = u + i.proportions.height;
        switch (s) {
        case "fit":
            return a >= h && l >= n && r >= u && d >= o;
        case "intersect":
            return a + t.helperProportions.width / 2 > h && l > n - t.helperProportions.width / 2 && r + t.helperProportions.height / 2 > u && d > o - t.helperProportions.height / 2;
        case "pointer":
            var c = (t.positionAbs || t.position.absolute).left + (t.clickOffset || t.offset.click).left,
                p = (t.positionAbs || t.position.absolute).top + (t.clickOffset || t.offset.click).top,
                m = e.ui.isOver(p, c, u, h, i.proportions.height, i.proportions.width);
            return m;
        case "touch":
            return (r >= u && d >= r || o >= u && d >= o || u > r && o > d) && (a >= h && l >= a || n >= h && l >= n || h > a && n > l);
        default:
            return !1
        }
    }, e.ui.ddmanager = {
        current: null,
        droppables: {
            "default": []
        },
        prepareOffsets: function (t, i) {
            var s = e.ui.ddmanager.droppables[t.options.scope] || [],
                a = i ? i.type : null,
                n = (t.currentItem || t.element).find(":data(droppable)").andSelf();
            e: for (var r = 0; s.length > r; r++)
                if (!(s[r].options.disabled || t && !s[r].accept.call(s[r].element[0], t.currentItem || t.element))) {
                    for (var o = 0; n.length > o; o++)
                        if (n[o] == s[r].element[0]) {
                            s[r].proportions.height = 0;
                            continue e
                        }
                    s[r].visible = "none" != s[r].element.css("display"), s[r].visible && ("mousedown" == a && s[r]._activate.call(s[r], i), s[r].offset = s[r].element.offset(), s[r].proportions = {
                        width: s[r].element[0].offsetWidth,
                        height: s[r].element[0].offsetHeight
                    })
                }
        },
        drop: function (t, i) {
            var s = !1;
            return e.each(e.ui.ddmanager.droppables[t.options.scope] || [], function () {
                this.options && (!this.options.disabled && this.visible && e.ui.intersect(t, this, this.options.tolerance) && (s = this._drop.call(this, i) || s), !this.options.disabled && this.visible && this.accept.call(this.element[0], t.currentItem || t.element) && (this.isout = 1, this.isover = 0, this._deactivate.call(this, i)))
            }), s
        },
        dragStart: function (t, i) {
            t.element.parentsUntil("body").bind("scroll.droppable", function () {
                t.options.refreshPositions || e.ui.ddmanager.prepareOffsets(t, i)
            })
        },
        drag: function (t, i) {
            t.options.refreshPositions && e.ui.ddmanager.prepareOffsets(t, i), e.each(e.ui.ddmanager.droppables[t.options.scope] || [], function () {
                if (!this.options.disabled && !this.greedyChild && this.visible) {
                    var s = e.ui.intersect(t, this, this.options.tolerance),
                        a = s || 1 != this.isover ? s && 0 == this.isover ? "isover" : null : "isout";
                    if (a) {
                        var n;
                        if (this.options.greedy) {
                            var r = this.options.scope,
                                o = this.element.parents(":data(droppable)").filter(function () {
                                    return e.data(this, "droppable").options.scope === r
                                });
                            o.length && (n = e.data(o[0], "droppable"), n.greedyChild = "isover" == a ? 1 : 0)
                        }
                        n && "isover" == a && (n.isover = 0, n.isout = 1, n._out.call(n, i)), this[a] = 1, this["isout" == a ? "isover" : "isout"] = 0, this["isover" == a ? "_over" : "_out"].call(this, i), n && "isout" == a && (n.isout = 0, n.isover = 1, n._over.call(n, i))
                    }
                }
            })
        },
        dragStop: function (t, i) {
            t.element.parentsUntil("body").unbind("scroll.droppable"), t.options.refreshPositions || e.ui.ddmanager.prepareOffsets(t, i)
        }
    }
})(jQuery);